<dictionaries>
    <comment>Optional element with any content; completely ignored.</comment>

    <!--You can set any number of different dictionaries. -->
    <dictionary>
        <!-- Dictionary name. The dictionary will be accessed for use by this name. -->
        <name>os</name>

        <!-- Data source. -->
        <source>
            <!-- Source is a file in the local file system. -->
            <file>
                <!-- Path on the local file system. -->
                <path>/opt/dictionaries/os.tsv</path>
                <!-- Which format to use for reading the file. -->
                <format>TabSeparated</format>
            </file>
        </source>

        <!-- Update interval for fully loaded dictionaries. 0 - never update. -->
        <lifetime>
            <min>300</min>
            <max>360</max>
            <!-- The update interval is selected uniformly randomly between min and max, in order to spread out the load when updating dictionaries on a large number of servers. -->
        </lifetime>

        <!-- or <!- - The update interval for fully loaded dictionaries or invalidation time for cached dictionaries. 0 - never update. - ->
        <lifetime>300</lifetime>
        -->

        <layout> <!-- Method for storing in memory. -->
            <flat />
            <!-- or <hashed />
            or
            <cache>
                <!- - Cache size in number of cells; rounded up to a degree of two. - ->
                <size_in_cells>1000000000</size_in_cells>
            </cache>
            or
            <ip_trie />
            -->
        </layout>

        <!-- Structure. -->
        <structure>
            <!-- Description of the column that serves as the dictionary identifier (key). -->
            <id>
                <!-- Column name with ID. -->
                <name>Id</name>
            </id>

            <attribute>
                <!-- Column name. -->
                <name>Name</name>
                <!-- Column type. (How the column is understood when loading. For MySQL, a table can have TEXT, VARCHAR, and BLOB, but these are all loaded as String) -->
                 <type>String</type>
                <!-- Value to use for a non-existing element. In the example, an empty string. -->
                <null_value></null_value>
            </attribute>
            <!-- Any number of attributes can be specified. -->
            <attribute>
                <name>ParentID</name>
                <type>UInt64</type>
                <null_value>0</null_value>
                <!-- Whether it defines a hierarchy - mapping to the parent ID (by default, false). -->
                <hierarchical>true</hierarchical>
                <!-- The mapping id -> attribute can be considered injective, in order to optimize GROUP BY. (by default, false) -->
                <injective>true</injective>
            </attribute>
        </structure>
    </dictionary>
</dictionaries>